<template>
	<div>
		<div class="grace-item-content">
			<el-upload class="avatar-uploader" v-bind="innerProp" v-on="innerEvent" :on-success="handleAvatarSuccess" :on-error="handlerAvatarError" :before-upload="beforeAvatarUpload">
				<img v-if="fields._value" :src="fields._value" class="avatar">
				<i v-else class="el-icon-plus avatar-uploader-icon"></i>
			</el-upload>
		</div>
		<div class="grace-form-rule-message" v-if="fields._rule_message">
			{{fields._rule_message}}
		</div>
	</div>
</template>
<script>
	export default {
		data() {
				return {
					innerProp: this.fields.inner_prop,
					innerEvent: this.fields.inner_event
				}
			},
			components: {},
			props: ['fields'],
			methods: {
				handleAvatarSuccess(res, file) {
					this.fields._value = response.body.resBody;
				},
				handlerAvatarError: function(error, file) {
					console.log(error);
					this.$message.error("上传文件错误！");
				},
				beforeAvatarUpload(file) {
					const isJPG = file.type === 'image/jpeg';
					const isLt2M = file.size / 1024 / 1024 < 2;
					if(!isJPG) {
						this.$message.error('上传头像图片只能是 JPG 格式!');
					}
					if(!isLt2M) {
						this.$message.error('上传头像图片大小不能超过 2MB!');
					}
					return isJPG && isLt2M;
				}
			},
			computed: {},
			watch: {},
			mounted: function() {
				var resolver = this.fields._getResolver();
				if(resolver.isItem) {
					resolver.mountedItem();
				}
			}
	}
</script>
<style>
	.avatar-uploader .el-upload {
		border: 1px dashed #d9d9d9;
		border-radius: 6px;
		cursor: pointer;
		position: relative;
		overflow: hidden;
	}
	
	.avatar-uploader .el-upload:hover {
		border-color: #409EFF;
	}
	
	.avatar-uploader-icon {
		font-size: 28px;
		color: #8c939d;
		width: 178px;
		height: 178px;
		line-height: 178px;
		text-align: center;
	}
	
	.avatar {
		width: 178px;
		height: 178px;
		display: block;
	}
</style>