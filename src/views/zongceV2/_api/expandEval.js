/* Automatically generated by './build/runApi.js' */

import request from "~/utils/request";
import ajax from "~/utils/ajax";


const queryPunishList = data =>
  request({
    url: "/expandEval/queryPunishList.do",
    method: "post",
    data: data
}); 

const getSchemeStateDict = data =>
  request({
    url: "/expandEval/getSchemeStateDict.do",
    method: "post",
    data: data
}); 

const updateScheme = data =>
  request({
    url: "/expandEval/updateScheme.do",
    method: "post",
    data: data
}); 

const insertScheme = data =>
  request({
    url: "/expandEval/insertScheme.do",
    method: "post",
    data: data
}); 

const copyScheme = data =>
  request({
    url: "/expandEval/copyScheme.do",
    method: "post",
    data: data
}); 

const processSchemeName = data =>
  request({
    url: "/expandEval/processSchemeName.do",
    method: "post",
    data: data
}); 

const deleteSchemeById = data =>
  request({
    url: "/expandEval/deleteSchemeById.do",
    method: "post",
    data: data
}); 

const startScheme = data =>
  request({
    url: "/expandEval/startScheme.do",
    method: "post",
    data: data
}); 

const getEvalItemBeanBySchemeId = data =>
  request({
    url: "/expandEval/getEvalItemBeanBySchemeId.do",
    method: "post",
    data: data
}); 

const saveExEveluateBean = data =>
  ajax({
    url: "/expandEval/saveExEveluateBean.do",
    method: "post",
    data: data
}); 

const queryExpandEvalCategory = data =>
  request({
    url: "/expandEval/queryExpandEvalCategory.do",
    method: "post",
    data: data
}); 

const getExpandEvalCatagoryBySchoolYearId = data =>
  request({
    url: "/expandEval/getExpandEvalCatagoryBySchoolYearId.do",
    method: "post",
    data: data
}); 

const getExpandEvalCatagoryByDate = data =>
  request({
    url: "/expandEval/getExpandEvalCatagoryByDate.do",
    method: "post",
    data: data
}); 

const createExpandRecord = data =>
  request({
    url: "/expandEval/createExpandRecord.do",
    method: "post",
    data: data
}); 

const applyExpandRecord = data =>
  request({
    url: "/expandEval/applyExpandRecord.do",
    method: "post",
    data: data
}); 

const checkExpandRecord = data =>
  request({
    url: "/expandEval/checkExpandRecord.do",
    method: "post",
    data: data
}); 

const getExpandEvalRecordById = data =>
  request({
    url: "/expandEval/getExpandEvalRecordById.do",
    method: "post",
    data: data
}); 

const getExpandCheckStateDict = data =>
  request({
    url: "/expandEval/getExpandCheckStateDict.do",
    method: "post",
    data: data
}); 

const getDataSourceDict = data =>
  request({
    url: "/expandEval/getDataSourceDict.do",
    method: "post",
    data: data
}); 

const queryExpandEvalRecordForStaff = data =>
  request({
    url: "/expandEval/queryExpandEvalRecordForStaff.do",
    method: "post",
    data: data
}); 

const queryExpandEvalRecordForStu = data =>
  request({
    url: "/expandEval/queryExpandEvalRecordForStu.do",
    method: "post",
    data: data
}); 

const queryExpandEvalRecordForCheck = data =>
  request({
    url: "/expandEval/queryExpandEvalRecordForCheck.do",
    method: "post",
    data: data
}); 

const adStuExpandEval = data =>
  request({
    url: "/public/uploadStuExpandEval.do",
    method: "post",
    data: data
}); 

const importExpandEvalRecord = data =>
  request({
    url: "/expandEval/importExpandEvalRecord.do",
    method: "post",
    data: data
  }); 
const getExpandEvalTemplateUrl = data =>
  request({
    url: "/expandEval/getExpandEvalTemplateUrl.do",
    method: "post",
    data: data
  }); 
export default {
  getExpandEvalTemplateUrl,
  queryPunishList,getSchemeStateDict,updateScheme,insertScheme,copyScheme,processSchemeName,deleteSchemeById,startScheme,getEvalItemBeanBySchemeId,saveExEveluateBean,queryExpandEvalCategory,getExpandEvalCatagoryBySchoolYearId,getExpandEvalCatagoryByDate,createExpandRecord,applyExpandRecord,checkExpandRecord,getExpandEvalRecordById,getExpandCheckStateDict,getDataSourceDict,queryExpandEvalRecordForStaff,queryExpandEvalRecordForStu,queryExpandEvalRecordForCheck,adStuExpandEval,importExpandEvalRecord
};
