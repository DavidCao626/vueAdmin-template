/* Automatically generated by './build/make/*.js' */

import api from "../../_api/stuPunish.js";
const queryStudentBaseInfo = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.queryStudentBaseInfo(params).then(response => {
      resolve(response);
    });
  });

const queryPunishList = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.queryPunishList(params).then(response => {
      resolve(response);
    });
  });

const getPunishStateDict = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.getPunishStateDict(params).then(response => {
      resolve(response);
    });
  });

const getPunishItemStateDict = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.getPunishItemStateDict(params).then(response => {
      resolve(response);
    });
  });

const updatePunish = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.updatePunish(params).then(response => {
      resolve(response);
    });
  });

const insertPunish = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.insertPunish(params).then(response => {
      resolve(response);
    });
  });

const copyPunish = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.copyPunish(params).then(response => {
      resolve(response);
    });
  });

const processPunishName = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.processPunishName(params).then(response => {
      resolve(response);
    });
  });

const deletePunishById = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.deletePunishById(params).then(response => {
      resolve(response);
    });
  });

const startPunish = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.startPunish(params).then(response => {
      resolve(response);
    });
  });

const getPunishItemBeanByPunishId = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.getPunishItemBeanByPunishId(params).then(response => {
      resolve(response);
    });
  });

const savePunishItemBean = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.savePunishItemBean(params).then(response => {
      resolve(response);
    });
  });

const queryPunishItemByShoolYearId = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.queryPunishItemByShoolYearId(params).then(response => {
      resolve(response);
    });
  });

const queryPunishRecordForStaff = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.queryPunishRecordForStaff(params).then(response => {
      resolve(response);
    });
  });

const queryPunishRecordForStu = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.queryPunishRecordForStu(params).then(response => {
      resolve(response);
    });
  });

const insertPunishRecord = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.insertPunishRecord(params).then(response => {
      resolve(response);
    });
  });

const deletePunishRecord = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.deletePunishRecord(params).then(response => {
      resolve(response);
    });
  });

const getPunshiRecordById = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.getPunshiRecordById(params).then(response => {
      resolve(response);
    });
  });

const uploadStuPunish = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.uploadStuPunish(params).then(response => {
      resolve(response);
    });
  });

const importPunishRecord = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.importPunishRecord(params).then(response => {
      resolve(response);
    });
  });

const getPunishTemplateUrl = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.getPunishTemplateUrl(params).then(response => {
      resolve(response);
    });
  });
export default {
  queryPunishList,
  getPunishTemplateUrl,
  getPunishStateDict,
  getPunishItemStateDict,
  updatePunish,
  insertPunish,
  copyPunish,
  processPunishName,
  deletePunishById,
  startPunish,
  getPunishItemBeanByPunishId,
  savePunishItemBean,
  queryPunishItemByShoolYearId,
  queryPunishRecordForStaff,
  queryPunishRecordForStu,
  insertPunishRecord,
  deletePunishRecord,
  getPunshiRecordById,
  uploadStuPunish,
  importPunishRecord,
  queryStudentBaseInfo
};
