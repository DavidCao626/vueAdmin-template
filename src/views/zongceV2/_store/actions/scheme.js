/* Automatically generated by './build/make/*.js' */

import api from "../../_api/scheme.js";

const getItemsTree = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.getItemsTree(params).then(response => {
      resolve(response);
    });
  });
const getDictByDictNames = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.getDictByDictNames(params).then(response => {
      resolve(response);
    });
  });
const processPunishName = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.processPunishName(params).then(response => {
      resolve(response);
    });
  });

const insertScheme = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.insertScheme(params).then(response => {
      resolve(response);
    });
  });

const copyScheme = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.copyScheme(params).then(response => {
      resolve(response);
    });
  });

const deleteScheme = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.deleteScheme(params).then(response => {
      resolve(response);
    });
  });

const querySchemeList = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.querySchemeList(params).then(response => {
      resolve(response);
    });
  });

const savePunishItems = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.savePunishItems(params).then(response => {
      resolve(response);
    });
  });

const saveEvalItems = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.saveEvalItems(params).then(response => {
      resolve(response);
    });
  });

const saveCapacityItems = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.saveCapacityItems(params).then(response => {
      resolve(response);
    });
  });

const saveInnovateItems = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.saveInnovateItems(params).then(response => {
      resolve(response);
    });
  });

const getPunishItems = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.getPunishItems(params).then(response => {
      resolve(response);
    });
  });

const getEvalItems = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.getEvalItems(params).then(response => {
      resolve(response);
    });
  });

const getCapacityItems = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.getCapacityItems(params).then(response => {
      resolve(response);
    });
  });

const getInnovateItems = ({ commit, state }, params) =>
  new Promise(resolve => {
    api.getInnovateItems(params).then(response => {
      resolve(response);
    });
  });
export default {
  getDictByDictNames,
  getItemsTree,
  processPunishName,
  insertScheme,
  copyScheme,
  deleteScheme,
  querySchemeList,
  savePunishItems,
  saveEvalItems,
  saveCapacityItems,
  saveInnovateItems,
  getPunishItems,
  getEvalItems,
  getCapacityItems,
  getInnovateItems
};
